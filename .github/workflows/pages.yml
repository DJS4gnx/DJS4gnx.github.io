- name: Host with Github Pages
on:
  workflow_dispatch:
  push:
    branches:
      - main # obviously we need to publish changes from main
      - total-overhaul # a preview should be pushed too but only with github

# set permissions for github token
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest # default runs on ubuntu-22.04
    workflow_dispatch:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Publish the main site
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs # when we pr this let's keep this
          publish_branch: main # force the branch to this one
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Pushed beta: ${{ github.event.head_commit.message }}'
          tag_name: ${{ steps.prepare_tag.outputs.DEPLOY_TAG_NAME }}
          tag_message: 'Deployment ${{ github.ref_name }}'
      - name: Publish a preview
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs # when we pr this let's keep this
          publish_branch: total-overhaul # force the branch to this one
          destination_dir: preview # deploy to *.github.io/preview so it doesn't override root
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Pushed beta: ${{ github.event.head_commit.message }}'
          tag_name: ${{ steps.prepare_tag.outputs.DEPLOY_TAG_NAME }}
          tag_message: 'Deployment ${{ github.ref_name }}'